akka {
  # Loging parameters
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  log-dead-letters-during-shutdown = true

  actor {

    deployment {
      # Local actors
      /masterActor/processingMasterActor/indentifyLinksRouter {
        router = round-robin
        nr-of-instances = 2
      }
      /masterActor/processingMasterActor/dataExtractorRouter {
        router = round-robin
        nr-of-instances = 2
      }
      /masterActor/persistenceMasterActor/persistenceRouter {
        router = round-robin
        nr-of-instances = 1
      }

#      "/masterActor/persistenceMasterActor/persistenceRouter/*" {
#        dispatcher = persistence-dispatcher
#      }

#      "/masterActor/downloadUrlRouter/*" {
#        dispatcher = download-dispatcher
#      }

      # Remote actors
      /masterActor/downloadUrlRouter {
        router = round-robin
        nr-of-instances = 4   # should be calculated based on the number of domains that are being crawled
        #target.nodes = ["akka.tcp://DownloaderSystem@0.0.0.0:2553"]
        #, "akka.tcp://CrawlerSystem@127.0.0.1:2552"]
      }
    }

    #provider = "akka.actor.LocalActorRefProvider"   # Local actors reference provider
    #provider = "akka.remote.RemoteActorRefProvider"   # Remote actors reference provider

  }

#  remote {
#    enabled-transports = ["akka.remote.netty.tcp"]
#    netty.tcp {
#      hostname = "127.0.0.1"
#      port = 2552
#
#      # Sets the send buffer size of the Sockets, set to 0b for platform default
#      send-buffer-size = 1024000b
#
#      # Sets the receive buffer size of the Sockets, set to 0b for platform default
#      receive-buffer-size = 1024000b
#
#      # Maximum message size the transport will accept, but at least 32000 bytes.
#      # Please note that UDP does not support arbitrary large datagrams, so this setting has to be chosen carefully when using UDP.
#      # Both send-buffer-size and receive-buffer-size settings has to be adjusted to be able to buffer messages of maximum size.
#      maximum-frame-size = 512000b
#    }
#  }
}

atmos {
  trace {
    enabled = true                            # Enable tracing
    node = ActorModel-AKKA-workshop-Crawler   # Node name

    traceable {                               # Trace settings
      "*" = on                                # All
    }

    sampling {                                # Trace resolution
      "*" = 1                                 # 1 to 1
    }
  }
}

persistence-dispatcher {
  # Must be one of the following
  # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
  # MessageDispatcherConfigurator with a public constructor with
  # both com.typesafe.config.Config parameter and
  # akka.dispatch.DispatcherPrerequisites parameters.
  # PinnedDispatcher must be used together with executor=thread-pool-executor.
  type = "Dispatcher"

  executor = "fork-join-executor"

  # This will be used if you have set "executor = "fork-join-executor""
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2

    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and paralllelism-max values.
    parallelism-factor = 2.0

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 8
  }


  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s

  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5

  # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
  throughput-deadline-time = 0ms

}

download-dispatcher {
  # Must be one of the following
  # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
  # MessageDispatcherConfigurator with a public constructor with
  # both com.typesafe.config.Config parameter and
  # akka.dispatch.DispatcherPrerequisites parameters.
  # PinnedDispatcher must be used together with executor=thread-pool-executor.
  type = "Dispatcher"

  executor = "fork-join-executor"

  # This will be used if you have set "executor = "fork-join-executor""
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2

    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and paralllelism-max values.
    parallelism-factor = 2.0

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 8
  }


  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 1s

  # Throughput defines the number of messages that are processed in a batch
  # before the thread is returned to the pool. Set to 1 for as fair as possible.
  throughput = 5

  # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
  throughput-deadline-time = 0ms

}
